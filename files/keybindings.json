// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+f k",
        "command": "workbench.action.navigateUp",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+f j",
        "command": "workbench.action.navigateDown",
        "when": "editorFocus"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+shift+6",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+f shift+n",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "alt+g n",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus || isInDiffFocus"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+g shift+n",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+g c",
        "command": "merge-conflict.next"
    },
    {
        "key": "alt+g shift+c",
        "command": "merge-conflict.previous"
    },
    {
        "key": "alt+g s",
        "command": "git.stageSelectedRanges"
    },
    {
        "key": "alt+g h",
        "command": "git.stash"
    },
    {
        "key": "alt+a c",
        "command": "atlascode.bb.addComment"
    },
    {
        "key": "alt+d b",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+g v",
        "command": "editor.action.dirtydiff.next",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+f3",
        "command": "-editor.action.dirtydiff.next",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+g shift+v",
        "command": "editor.action.dirtydiff.previous",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+f3",
        "command": "-editor.action.dirtydiff.previous",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+d c",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "alt+d shift+x",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode"
    },
    {
        "key": "shift+f5",
        "command": "-workbench.action.debug.stop",
        "when": "inDebugMode"
    },
    {
        "key": "alt+d s",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f11",
        "command": "-workbench.action.debug.stepInto",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "alt+d shift+s",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "alt+d n",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "alt+d d",
        "command": "workbench.action.debug.start",
        "when": "!inDebugMode"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "!inDebugMode"
    },
    {
        "key": "alt+o",
        "command": "workbench.action.output.toggleOutput"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "-workbench.action.output.toggleOutput"
    },
    {
        "key": "alt+d shift+b",
        "command": "editor.debug.action.conditionalBreakpoint"
    },
    {
        "key": "alt+g r",
        "command": "git.revertSelectedRanges"
    },
    {
        "key": "alt+t t",
        "command": "python.runtests",
        "when": "editorLangId == python"
    },
    {
        "key": "alt+t r",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "ctrl+f h",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+f l",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+f c",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+f j",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+f k",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.scrollUp",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-workbench.action.terminal.scrollUp",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-workbench.action.terminal.scrollDown",
        "when": "terminalFocus"
    },
    {
        "key": "alt+n n",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
    },
    {
        "key": "escape",
        "command": "-notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
    },
    {
        "key": "alt+g k",
        "command": "editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "f7",
        "command": "-editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "alt+g j",
        "command": "editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "shift+f7",
        "command": "-editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "alt+g i",
        "command": "toggle.diff.renderSideBySide"
    },
    {
        "key": "alt+d r",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.quickOpen",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "alt+s r",
        "command": "sqltools.executeQueryFromFile"
    },
    {
        "key": "alt+s b",
        "command": "sqltools.bookmarkSelection",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+e ctrl+q",
        "command": "-sqltools.bookmarkSelection",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+s d",
        "command": "sqltools.deleteBookmark"
    },
    {
        "key": "ctrl+e ctrl+r",
        "command": "-sqltools.deleteBookmark"
    },
    {
        "key": "alt+s a",
        "command": "sqltools.runFromBookmarks"
    },
    {
        "key": "ctrl+e ctrl+a",
        "command": "-sqltools.runFromBookmarks"
    },
    {
        "key": "ctrl+e ctrl+d",
        "command": "-sqltools.describeTable"
    },
    {
        "key": "alt+s e",
        "command": "sqltools.executeQuery",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+e ctrl+e",
        "command": "-sqltools.executeQuery",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+s s",
        "command": "sqltools.showRecords"
    },
    {
        "key": "ctrl+e ctrl+s",
        "command": "-sqltools.showRecords"
    },
    {
        "key": "alt+s h",
        "command": "sqltools.runFromHistory"
    },
    {
        "key": "ctrl+e ctrl+h",
        "command": "-sqltools.runFromHistory"
    },
    {
        "key": "ctrl+e ctrl+b",
        "command": "-sqltools.formatSql",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+f n",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+f h",
        "command": "workbench.action.navigateLeft",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+f l",
        "command": "workbench.action.navigateRight",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.quickOpenView",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "alt+f n",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "alt+f shift+n",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "alt+f d",
        "command": "search.searchEditor.action.deleteFileResults",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "-search.searchEditor.action.deleteFileResults",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+f s",
        "command": "search.action.focusQueryEditorWidget",
        "when": "inSearchEditor"
    },
    {
        "key": "escape",
        "command": "-search.action.focusQueryEditorWidget",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+f f",
        "command": "search.action.openEditor"
    },
    {
        "key": "alt+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+m",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    // Git/SCM stuff
    {
        "key": "alt+g w",
        "command": "workbench.action.tasks.runTask",
        "args": "git commit"
    },
    {
        "key": "alt+g g",
        "command": "workbench.scm.focus",
    },
    {
        "key": "space",
        "command": "list.selectAndPreserveFocus",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm'"
    },
    {
        "key": "alt+g s",
        "command": "git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "alt+g shift+d",
        "command": "gitlens.diffDirectory"
    },
    {
        "key": "alt+g r",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "alt+g u",
        "command": "git.unstageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "-git.unstageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "alt+g u",
        "command": "gitlens.views.unstageFile"
    },
    {
        "key": "alt+g u",
        "command": "gitlens.views.unstageFile",
        "when": "isInDiffEditor"
    },
    {
        "key": "alt+g d",
        "command": "gitlens.externalDiffAll"
    },
    {
        "key": "alt+g n",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+g shift+n",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+g l",
        "command": "gitlens.showQuickRepoStatus",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g s",
        "command": "-gitlens.showQuickRepoStatus",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "alt+g shift+s",
        "command": "git.stage"
    },
    {
        "key": "alt+t t",
        "command": "workbench.action.tasks.test"
    }
]
